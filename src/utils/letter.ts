export type Capitalize<S extends string> =
  S extends `${infer Initials}${infer OtherStr}`
    ? `${CharToCapitalize<Initials>}${OtherStr}`
    : S;

export type CharToCapitalize<C> = C extends "a"
  ? "A"
  : C extends "b"
  ? "B"
  : C extends "c"
  ? "C"
  : C extends "d"
  ? "D"
  : C extends "e"
  ? "E"
  : C extends "f"
  ? "F"
  : C extends "g"
  ? "G"
  : C extends "h"
  ? "H"
  : C extends "i"
  ? "I"
  : C extends "j"
  ? "J"
  : C extends "k"
  ? "K"
  : C extends "l"
  ? "L"
  : C extends "m"
  ? "M"
  : C extends "n"
  ? "N"
  : C extends "o"
  ? "O"
  : C extends "p"
  ? "P"
  : C extends "q"
  ? "Q"
  : C extends "r"
  ? "R"
  : C extends "s"
  ? "S"
  : C extends "t"
  ? "T"
  : C extends "u"
  ? "U"
  : C extends "v"
  ? "V"
  : C extends "w"
  ? "W"
  : C extends "x"
  ? "X"
  : C extends "y"
  ? "Y"
  : C extends "z"
  ? "Z"
  : C;

export type Letters = LowercaseLetters | CapitalLetter;

export type LowercaseLetters =
  | "a"
  | "b"
  | "c"
  | "d"
  | "e"
  | "f"
  | "g"
  | "h"
  | "i"
  | "j"
  | "k"
  | "l"
  | "m"
  | "n"
  | "o"
  | "p"
  | "q"
  | "r"
  | "s"
  | "t"
  | "u"
  | "v"
  | "w"
  | "x"
  | "y"
  | "z";

export type CapitalLetter =
  | "A"
  | "B"
  | "C"
  | "D"
  | "E"
  | "F"
  | "G"
  | "H"
  | "I"
  | "J"
  | "K"
  | "L"
  | "M"
  | "N"
  | "O"
  | "P"
  | "Q"
  | "R"
  | "S"
  | "T"
  | "U"
  | "V"
  | "W"
  | "X"
  | "Y"
  | "Z";
